<?php

declare(strict_types=1);

namespace DoctrineMigrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

/**
 * Миграция для переименования таблицы resource_locations в resources и удаления колонки location_id
 */
final class Version20250728224300 extends AbstractMigration
{
    public function getDescription(): string
    {
        return 'Переименование таблицы resource_locations в resources и удаление колонки location_id';
    }

    public function up(Schema $schema): void
    {
        // Сначала проверяем, существует ли таблица resource_locations
        $checkTableExists = "SELECT EXISTS (
            SELECT FROM information_schema.tables 
            WHERE table_name = 'resource_locations'
        )";
        
        $exists = $this->connection->executeQuery($checkTableExists)->fetchOne();
        
        if ($exists) {
            // Если таблица существует, то создаем новую с нужной структурой
            $this->addSql('CREATE TABLE resources (
                id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                name VARCHAR(255) NOT NULL,
                category VARCHAR(50) NOT NULL,
                tier INT NOT NULL,
                drop_chance DOUBLE PRECISION NOT NULL,
                PRIMARY KEY(id)
            )');
            
            // Проверяем существование колонки location_id в старой таблице
            $checkColumnExists = "SELECT EXISTS (
                SELECT FROM information_schema.columns 
                WHERE table_name = 'resource_locations' AND column_name = 'location_id'
            )";
            
            $columnExists = $this->connection->executeQuery($checkColumnExists)->fetchOne();
            
            // Копируем данные из старой таблицы, игнорируя location_id если она существует
            if ($columnExists) {
                $this->addSql('INSERT INTO resources (id, name, category, tier, drop_chance)
                    SELECT id, name, category, tier, drop_chance FROM resource_locations');
            } else {
                $this->addSql('INSERT INTO resources 
                    SELECT * FROM resource_locations');
            }
            
            // Удаляем старую таблицу
            $this->addSql('DROP TABLE resource_locations');
        } else {
            // Если таблица не существует, просто создаем новую
            $this->addSql('CREATE TABLE resources (
                id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                name VARCHAR(255) NOT NULL,
                category VARCHAR(50) NOT NULL,
                tier INT NOT NULL,
                drop_chance DOUBLE PRECISION NOT NULL,
                PRIMARY KEY(id)
            )');
        }
    }

    public function down(Schema $schema): void
    {
        // Откатываем изменения
        $this->addSql('CREATE TABLE resource_locations (
            id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
            name VARCHAR(255) NOT NULL,
            category VARCHAR(50) NOT NULL,
            tier INT NOT NULL,
            drop_chance DOUBLE PRECISION NOT NULL,
            PRIMARY KEY(id)
        )');
        
        // Копируем данные обратно
        $this->addSql('INSERT INTO resource_locations 
            SELECT * FROM resources');
            
        // Удаляем новую таблицу
        $this->addSql('DROP TABLE resources');
    }
}
